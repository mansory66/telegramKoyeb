from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from database import Database
from config import ADMIN_USERNAME

async def admin_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.username != ADMIN_USERNAME:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    keyboard = [
        [InlineKeyboardButton("üìã –û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_pending_orders")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=reply_markup)

async def show_pending_orders(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query.from_user.username != ADMIN_USERNAME:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.", show_alert=True)
        return

    with Database() as db:
        orders = db.get_pending_orders()

    if not orders:
        await query.edit_message_text(
            "–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_menu")]])
        )
        return

    message = "üìã –û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫–∞–∑—ã:\n\n"
    keyboard = []
    
    for order in orders:
        message += (
            f"–ó–∞–∫–∞–∑ #{order['id']}\n"
            f"–¢–æ–≤–∞—Ä: {order['product_name']}\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{order['username']}\n"
            f"–°—Ç–∞—Ç—É—Å: {order['status']}\n\n"
        )
        keyboard.append([InlineKeyboardButton(
            f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å #{order['id']}", 
            callback_data=f"admin_confirm_{order['id']}"
        )])

    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_menu")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(message, reply_markup=reply_markup)

async def confirm_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query.from_user.username != ADMIN_USERNAME:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.", show_alert=True)
        return

    order_id = int(query.data.split('_')[2])
    
    with Database() as db:
        db.update_order_status(order_id, 'paid')
        order = db.get_order(order_id)
        
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        await context.bot.send_message(
            chat_id=order['telegram_id'],
            text=(
                f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É. "
                "–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ."
            ),
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω", callback_data=f"received_{order_id}")],
                [InlineKeyboardButton("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–∫–∞–∑–æ–º", callback_data=f"problem_{order_id}")]
            ])
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    await show_pending_orders(update, context)

async def handle_admin_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.from_user.username != ADMIN_USERNAME:
        await query.edit_message_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    if query.data == "admin_menu":
        keyboard = [
            [InlineKeyboardButton("üìã –û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_pending_orders")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=reply_markup)
    
    elif query.data == "admin_pending_orders":
        await show_pending_orders(update, context)
    
    elif query.data.startswith("admin_confirm_"):
        await confirm_payment(update, context) 